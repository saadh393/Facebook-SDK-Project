<?php
session_start();
require_once '../src/Facebook/autoload.php';

$fb = new Facebook\Facebook([
  'app_id' => ' ',
  'app_secret' => ' ',
  'default_graph_version' => 'v2.4',
  ]);

$helper = $fb->getRedirectLoginHelper();
$permissions = ['email', 'user_posts']; // optional

try {
	if (isset($_SESSION['facebook_access_token'])) {
		$accessToken = $_SESSION['facebook_access_token'];
	} else {
  		$accessToken = $helper->getAccessToken();
	}
} catch(Facebook\Exceptions\FacebookResponseException $e) {
 	// When Graph returns an error
 	echo 'Graph returned an error: ' . $e->getMessage();

  	exit;
} catch(Facebook\Exceptions\FacebookSDKException $e) {
 	// When validation fails or other local issues
	echo 'Facebook SDK returned an error: ' . $e->getMessage();
  	exit;
 }

if (isset($accessToken)) {
	if (isset($_SESSION['facebook_access_token'])) {
		$fb->setDefaultAccessToken($_SESSION['facebook_access_token']);
	} else {
		// getting short-lived access token
		$_SESSION['facebook_access_token'] = (string) $accessToken;

	  	// OAuth 2.0 client handler
		$oAuth2Client = $fb->getOAuth2Client();

		// Exchanges a short-lived access token for a long-lived one
		$longLivedAccessToken = $oAuth2Client->getLongLivedAccessToken($_SESSION['facebook_access_token']);

		$_SESSION['facebook_access_token'] = (string) $longLivedAccessToken;

		// setting default access token to be used in script
		$fb->setDefaultAccessToken($_SESSION['facebook_access_token']);
	}

	// redirect the user back to the same page if it has "code" GET variable
	if (isset($_GET['code'])) {
		header('Location: ./');
	}

	// getting basic info about user
	try {
		$profile_request = $fb->get('me?fields=feed.limit(50){likes.limit(10)},name');
		$user = $profile_request->getGraphNode();
    	
    	
	} catch(Facebook\Exceptions\FacebookResponseException $e) {
		// When Graph returns an error
		echo 'Graph returned an error: ' . $e->getMessage();
		session_destroy();
		// redirecting user back to app login page
		header("Location: ./");
		exit;
	} catch(Facebook\Exceptions\FacebookSDKException $e) {
		// When validation fails or other local issues
		echo 'Facebook SDK returned an error: ' . $e->getMessage();
		exit;
	}

	// printing $profile array on the screen which holds the basic info about user

$myuser = json_decode($user, true);
$score = array();

for($i=0; $i<Count($myuser['feed']); $i++){
for($j=0; $j<Count($myuser['feed'][$i]['likes']); $j++){

if(!isset($score[$myuser['feed'][$i]['likes'][$j]['name']])){
$score[$myuser['feed'][$i]['likes'][$j]['name']]= 0;
}else{
$score[$myuser['feed'][$i]['likes'][$j]['name']]++;
}

}
}

echo "-----------------------";
echo "<br>";
asort($score);
    
$mostLiker = array();
$i= 0;
$j=0;

foreach($score as $key=>$value){
$i++;
if($i<count($score)-5){continue;}

echo $key." = ".$value."<br>";
$mostLiker[$j] = $key;
$j++;
}

print_r($mostLiker);
echo "==============================================================<br>";

for($i=0; $i<count($mostLiker)-1; $i++){
echo $i."<br>";
echo $mostLiker[$i]."<br>";
if($user['name']==$mostLiker[$i]){unset($mostLiker[$i]);}

}

echo "==============================================================<br>";
print_r($mostLiker);
echo "==============================================================<br>";

/*
for($i=0; $i<count($mostliker); $i++){
if($user['name']==$mostliker[$i]){unset($mostliker[$i]);}

}
$random = rand(1,5);
echo "==============================================================";
echo "==============================================================<br>";
echo "==============================================================<br>";
echo "==============================================================<br>";
do{
$random = rand(1,5);
echo $mostLiker[$random];
}while($mostLiker[$random]==$user['name']);
*/
} else {

	$loginUrl = $helper->getLoginUrl('http://appguru.epizy.com/guruji/code_panel/myCodes.php', $permissions);


echo "<a href='{$loginUrl}'>Log in</a>";
}
?>
